/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import BO.Objectstream;
import BO.Question;
import BO.Topic;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.security.SecureRandom;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Admin
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    static Vector<Question> questList = new Vector();
    public static DefaultListModel<String> model;
    Objectstream os;
    JFileChooser fChooser;
    String filePath = null;
    DefaultComboBoxModel<Integer> timeModel;
    public static int errorMes = -1;

    public Main() {
        new KeyOpen(this, true);
        initMain();
    }

    private void initMain() {
        try {
            UIManager.setLookAndFeel(
                    UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        os = new Objectstream();
        initComponents();
        model = new DefaultListModel();
        nameList.setModel(model);
        fChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Data file", "DAT");
        fChooser.setFileFilter(filter);
        fChooser.setMultiSelectionEnabled(false);
        Thread g = new Thread() {
            @Override
            public void run() {
                while (true) {
                    if (filePath != null) {
                        mnSave.setEnabled(true);
                    } else {
                        mnSave.setEnabled(false);
                    }
                    if (model.getSize() == 0) {
                        mnChange.setEnabled(false);
                        mnDelete.setEnabled(false);
                        mnEdit.setEnabled(false);
                        btChange.setEnabled(false);
                        btDele.setEnabled(false);
                        btEdit.setEnabled(false);
                    } else {
                        mnChange.setEnabled(true);
                        mnDelete.setEnabled(true);
                        mnEdit.setEnabled(true);
                        btChange.setEnabled(true);
                        btDele.setEnabled(true);
                        btEdit.setEnabled(true);
                    }
                }
            }
        };
        g.start();
        timeModel = new DefaultComboBoxModel();
        for (int i = 0; i < 100; i += 5) {
            if (i == 0) {
                timeModel.addElement(1);
                continue;
            }
            timeModel.addElement(i);
        }
        topicTime.setModel(timeModel);
        topicTime.updateUI();
        topicCode.setText(generateTopicCode());
    }

    private String generateTopicCode() {
        SecureRandom sRan = new SecureRandom();
        String sb = "";
        int count = 0;
        while (count != 6) {
            int num = sRan.nextInt(91) + 48;
            if ((num >= 48 && num <= 57) || (num >= 65 && num <= 90)) {
                char temp = (char) num;
                sb += temp;
                count += 1;
            }
        }
        return sb;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        quesPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        questArea = new javax.swing.JTextArea();
        pView = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        nameList = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        rb1 = new javax.swing.JRadioButton();
        rb2 = new javax.swing.JRadioButton();
        rb3 = new javax.swing.JRadioButton();
        rb4 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        topicCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        topicTime = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btDele = new javax.swing.JButton();
        btEdit = new javax.swing.JButton();
        btChange = new javax.swing.JButton();
        btAdd = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnNew = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        mnSave = new javax.swing.JMenuItem();
        mnSaveAs = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnAdd = new javax.swing.JMenuItem();
        mnDelete = new javax.swing.JMenuItem();
        mnEdit = new javax.swing.JMenuItem();
        mnChange = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Question editor");
        setAutoRequestFocus(false);

        quesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Question"));
        quesPanel.setForeground(new java.awt.Color(255, 255, 255));

        questArea.setEditable(false);
        questArea.setBackground(new java.awt.Color(240, 240, 240));
        questArea.setColumns(20);
        questArea.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        questArea.setRows(5);
        questArea.setBorder(null);
        questArea.setFocusable(false);
        jScrollPane2.setViewportView(questArea);

        javax.swing.GroupLayout quesPanelLayout = new javax.swing.GroupLayout(quesPanel);
        quesPanel.setLayout(quesPanelLayout);
        quesPanelLayout.setHorizontalGroup(
            quesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, quesPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        quesPanelLayout.setVerticalGroup(
            quesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pView.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        pView.setForeground(new java.awt.Color(255, 255, 255));
        pView.setToolTipText("");

        javax.swing.GroupLayout pViewLayout = new javax.swing.GroupLayout(pView);
        pView.setLayout(pViewLayout);
        pViewLayout.setHorizontalGroup(
            pViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );
        pViewLayout.setVerticalGroup(
            pViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Question Select"));

        nameList.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        nameList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        nameList.setToolTipText("");
        nameList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameListMouseClicked(evt);
            }
        });
        nameList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                nameListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(nameList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Answer"));

        buttonGroup1.add(rb1);
        rb1.setText("A");
        rb1.setEnabled(false);
        rb1.setOpaque(false);

        buttonGroup1.add(rb2);
        rb2.setText("B");
        rb2.setEnabled(false);
        rb2.setOpaque(false);

        buttonGroup1.add(rb3);
        rb3.setText("C");
        rb3.setEnabled(false);
        rb3.setOpaque(false);
        rb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rb4);
        rb4.setText("D");
        rb4.setEnabled(false);
        rb4.setOpaque(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rb1)
                    .addComponent(rb2)
                    .addComponent(rb3)
                    .addComponent(rb4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rb1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rb2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rb3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rb4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Question code");

        topicCode.setEditable(false);
        topicCode.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        topicCode.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        topicCode.setToolTipText("Code for student access your topic");
        topicCode.setFocusable(false);
        topicCode.setRequestFocusEnabled(false);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("Question time");

        topicTime.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        topicTime.setToolTipText("Time limit for your student");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("minutes");

        btDele.setText("Xoá");
        btDele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleActionPerformed(evt);
            }
        });

        btEdit.setText("Sửa");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        btChange.setText("Đổi vị trí");
        btChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btChangeActionPerformed(evt);
            }
        });

        btAdd.setText("Thêm");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        mnNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        mnNew.setText("New");
        mnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnNewActionPerformed(evt);
            }
        });
        jMenu1.add(mnNew);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Open");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        mnSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        mnSave.setText("Save");
        mnSave.setEnabled(false);
        mnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSaveActionPerformed(evt);
            }
        });
        jMenu1.add(mnSave);

        mnSaveAs.setText("Save as...");
        mnSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSaveAsActionPerformed(evt);
            }
        });
        jMenu1.add(mnSaveAs);

        jMenuItem6.setText("Exit");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenu2.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        mnAdd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_INSERT, java.awt.event.InputEvent.ALT_MASK));
        mnAdd.setText("Thêm câu hỏi");
        mnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAddActionPerformed(evt);
            }
        });
        jMenu2.add(mnAdd);

        mnDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.ALT_MASK));
        mnDelete.setText("Xoá câu hỏi");
        mnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDeleteActionPerformed(evt);
            }
        });
        jMenu2.add(mnDelete);

        mnEdit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
        mnEdit.setText("Chỉnh sửa câu hỏi");
        mnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnEditActionPerformed(evt);
            }
        });
        jMenu2.add(mnEdit);

        mnChange.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        mnChange.setText("Đổi vị trí");
        mnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnChangeActionPerformed(evt);
            }
        });
        jMenu2.add(mnChange);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btDele)
                                .addComponent(btEdit)
                                .addComponent(btChange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btAdd))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(quesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(topicCode, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(topicTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btDele)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btEdit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btChange)
                                .addGap(72, 72, 72))
                            .addComponent(pView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(quesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(topicCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(topicTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void showImage(Graphics g, BufferedImage currentImage) {
        if (currentImage != null) {
            g.clearRect(0, 0, pView.getWidth(), pView.getHeight());
            int imgWidth = currentImage.getWidth();
            int imgHeight = currentImage.getHeight();
            double ratio = 1.0 * imgWidth / imgHeight;
            int areaWidth = this.pView.getWidth();
            int areaHeight = this.pView.getHeight();
            if (imgWidth <= areaWidth && imgHeight <= areaHeight) {
                areaWidth = imgWidth;
                areaHeight = imgHeight;
            } else if (imgWidth > imgHeight) {
                if (imgWidth < areaWidth) {
                    areaWidth = imgWidth;
                }
                areaHeight = (int) (areaWidth / ratio);
            } else {
                if (imgHeight < areaHeight) {
                    areaHeight = imgHeight;
                }
                areaWidth = (int) (areaHeight * ratio);
            }
            g.drawImage(currentImage, 0, 0, areaWidth, areaHeight, this.pView);

        }
    }

    void showQuest() {
        int choice = nameList.getSelectedIndex();
        Question temp = questList.get(choice);
        questArea.setText(temp.getQuestQuest() + "\n");
        questArea.append("A. " + temp.getQuestAnswer1() + "\n");
        questArea.append("B. " + temp.getQuestAnswer2() + "\n");
        questArea.append("C. " + temp.getQuestAnswer3() + "\n");
        questArea.append("D. " + temp.getQuestAnswer4() + "\n");
        if (!temp.getQuestPath().equals("")) {
            String str = getClass().getClassLoader().getResource("resources").toString().substring(10);
            int st = str.indexOf("Testing.jar");
            str = str.substring(0, st);
            str = str.concat("resources\\" + temp.getQuestPath());
            try {
                BufferedImage currentImage = ImageIO.read(new File(str));
                showImage(pView.getGraphics(), currentImage);
            } catch (IOException ex) {

            }
        } else {
            Graphics g = pView.getGraphics();
            g.clearRect(0, 0, pView.getWidth(), pView.getHeight());
        }
        if (temp.getQuestKey().equals(temp.getQuestAnswer1())) {
            rb1.setSelected(true);
        } else if (temp.getQuestKey().equals(temp.getQuestAnswer2())) {
            rb2.setSelected(true);
        } else if (temp.getQuestKey().equals(temp.getQuestAnswer3())) {
            rb3.setSelected(true);
        } else if (temp.getQuestKey().equals(temp.getQuestAnswer4())) {
            rb4.setSelected(true);
        }
    }
    private void nameListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameListMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_nameListMouseClicked

    private void rb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rb3ActionPerformed

    private void nameListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_nameListValueChanged
        // TODO add your handling code here:
        try {
            showQuest();
        } catch (Exception e) {

        }

    }//GEN-LAST:event_nameListValueChanged

    private void mnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSaveActionPerformed
        // TODO add your handling code here:
        int timeAllow = timeModel.getElementAt(topicTime.getSelectedIndex());
        Topic currentTopic = new Topic(questList, timeAllow, topicCode.getText());
        try {
            os.writeDatfile(currentTopic, filePath);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_mnSaveActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        int choice = fChooser.showOpenDialog(this);
        if (choice == JFileChooser.APPROVE_OPTION) {
            File f = fChooser.getSelectedFile();
            filePath = f.getAbsolutePath();
            model.clear();
            questList.clear();
            Topic currentTopic = null;
            try {
                currentTopic = os.readDatfile(filePath);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex, "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            questList = currentTopic.getQuestList();
            topicCode.setText(currentTopic.getTopicCode());
            for (int i = 0; i < timeModel.getSize(); i++) {
                if (timeModel.getElementAt(i) == currentTopic.getTopicTime()) {
                    topicTime.setSelectedIndex(i);
                    break;
                }
            }
            for (int i = 0; i < questList.size(); i++) {
                String str = "Câu " + (i + 1);
                model.addElement(str);
            }
            nameList.updateUI();
            nameList.setSelectedIndex(0);
            this.setTitle(f.getName());
        }

    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(this, "Do you want to save file ?");
        if (choice == 1) {
            System.exit(0);
        } else if (choice == 0) {
            if (filePath == null) {
                mnSaveAsActionPerformed(evt);
            } else {
                mnSaveActionPerformed(evt);
            }
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void mnSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSaveAsActionPerformed
        // TODO add your handling code here:
        int choice = fChooser.showSaveDialog(this);
        if (choice == JFileChooser.APPROVE_OPTION) {
            filePath = fChooser.getSelectedFile().getAbsolutePath();
            if (!filePath.contains(".dat")) {
                filePath = filePath.concat(".dat");
            }
            mnSaveActionPerformed(evt);
            this.setTitle(fChooser.getSelectedFile().getName());
        }
    }//GEN-LAST:event_mnSaveAsActionPerformed
    void clearNew() {
        model.clear();
        questList.clear();
        nameList.updateUI();
        this.setTitle("");
        filePath = null;
        questArea.setText("");
        buttonGroup1.clearSelection();
        pView.getGraphics().clearRect(0, 0, pView.getWidth(), pView.getHeight());
    }
    private void mnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnNewActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(this, "Do you want to save file ?");
        if (choice == 1) {
            clearNew();
        } else if (choice == 0) {
            if (filePath == null) {
                mnSaveAsActionPerformed(evt);
            } else {
                mnSaveActionPerformed(evt);
            }
            clearNew();
        }
    }//GEN-LAST:event_mnNewActionPerformed
    void deleQuest(int index) {
        questList.remove(index);
        model.removeAllElements();
        for (int i = 0; i < questList.size(); i++) {
            String str = "Câu " + (i + 1);
            model.addElement(str);
        }
        nameList.updateUI();
        nameList.setSelectedIndex(0);
        JOptionPane.showMessageDialog(this, "Deleted");
    }
    private void mnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDeleteActionPerformed
        // TODO add your handling code here:
        int index = nameList.getSelectedIndex();
        int choice = JOptionPane.showConfirmDialog(this, "Are you sure to delete this ?", "Delete", JOptionPane.OK_CANCEL_OPTION);
        if (choice == 0) {
            deleQuest(index);
        }
    }//GEN-LAST:event_mnDeleteActionPerformed

    private void mnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnEditActionPerformed
        // TODO add your handling code here:
        new Edit(this, true);
        nameList.updateUI();
        nameList.setSelectedIndex(0);
        showQuest();
    }//GEN-LAST:event_mnEditActionPerformed

    private void mnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnChangeActionPerformed
        // TODO add your handling code here:
        new Change(this, true, nameList.getSelectedIndex());
        nameList.updateUI();
        nameList.setSelectedIndex(0);
        showQuest();
    }//GEN-LAST:event_mnChangeActionPerformed

    private void mnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAddActionPerformed
        // TODO add your handling code here:
        new Add(this, true);
        nameList.updateUI();
        nameList.setSelectedIndex(questList.size() - 1);
    }//GEN-LAST:event_mnAddActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        // TODO add your handling code here:
        mnAddActionPerformed(evt);
    }//GEN-LAST:event_btAddActionPerformed

    private void btDeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleActionPerformed
        // TODO add your handling code here:
        mnDeleteActionPerformed(evt);
    }//GEN-LAST:event_btDeleActionPerformed

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        // TODO add your handling code here:
        mnEditActionPerformed(evt);
    }//GEN-LAST:event_btEditActionPerformed

    private void btChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btChangeActionPerformed
        // TODO add your handling code here:
        mnChangeActionPerformed(evt);
    }//GEN-LAST:event_btChangeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btChange;
    private javax.swing.JButton btDele;
    private javax.swing.JButton btEdit;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem mnAdd;
    private javax.swing.JMenuItem mnChange;
    private javax.swing.JMenuItem mnDelete;
    private javax.swing.JMenuItem mnEdit;
    private javax.swing.JMenuItem mnNew;
    private javax.swing.JMenuItem mnSave;
    private javax.swing.JMenuItem mnSaveAs;
    private javax.swing.JList<String> nameList;
    private javax.swing.JPanel pView;
    private javax.swing.JPanel quesPanel;
    private javax.swing.JTextArea questArea;
    private javax.swing.JRadioButton rb1;
    private javax.swing.JRadioButton rb2;
    private javax.swing.JRadioButton rb3;
    private javax.swing.JRadioButton rb4;
    private javax.swing.JTextField topicCode;
    private javax.swing.JComboBox<Integer> topicTime;
    // End of variables declaration//GEN-END:variables
}
